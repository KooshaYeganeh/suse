#!/usr/bin/bash


# Leap

leap152=`cat /etc/os-release | grep "suse" | grep leap | grep -o 15.2`
leap153=`cat /etc/os-release | grep "suse" | grep leap | grep -o 15.3`
leap154=`cat /etc/os-release | grep "suse" | grep leap | grep -o 15.4`
leap155=`cat /etc/os-release | grep "suse" | grep leap | grep -o 15.5`

# Tumbleweed

Tumbleweed=`cat /etc/os-release | grep "suse" | grep leap | grep -o Tumbleweed`
tumbleweed=`cat /etc/os-release | grep "suse" | grep leap | grep -o tumbleweed`


green=$(tput setaf 6)
yellow=$(tput setaf 3)
red=$(tput setaf 1)
reset=`tput sgr0`



android_tools_repo(){


	if [ "$Tumbleweed" == "Tumbleweed" ] || [ "$tumbleweed" == "tumbleweed" ];then

		echo -e "\n $green =============== openSUSE Tumbleweed  =============== $reset \n"
		echo -e "$yellow Repository Name : android-tools from home:GNorth project $reset"
		
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:GNorth/openSUSE_Tumbleweed/home:GNorth.repo"

		echo "$yellow =============== Repository Name : android-tools from home:ahjolinna project ===============  $reset"

		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:ahjolinna/openSUSE_Tumbleweed/home:ahjolinna.repo"

	
		echo "$yellow =============== Repository Name : android-tools from home:mrbadguy project ===============  $reset"

		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:mrbadguy/openSUSE_Tumbleweed/home:mrbadguy.repo"




	elif [ "$leap152" == "15.2" ];then

		echo -e "$green =============== openSUSE Leap 15.2 =============== $reset \n"
		echo -e "$yellow Repository Name : android-tools from home:AndnoVember:test project $reset"

		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:AndnoVember:test/openSUSE_Leap_15.2/home:AndnoVember:test.repo"

	elif [ "$leap153" == "15.3" ];then

		echo -e "$reset =============== openSUSE Leap 15.3 =============== $green \n"
		
		echo -e "$yellow Repository Name : android-tools from home:AndnoVember:test project $reset"
		
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:AndnoVember:test/openSUSE_Leap_15.3/home:AndnoVember:test.repo"
		
		echo -e "$yellow Repository Name : android-tools from home:embar-:Lietukas project $reset"

		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:embar-:Lietukas/openSUSE_Leap_15.3/home:embar-:Lietukas.repo"
		

	elif [ "$leap154" == "15.4" ];then

		echo -e "$green =============== openSUSE Leap 15.4 =============== $reset \n"
		
		echo -e "$yellow Repository Name : android-tools from home:AndnoVember:test project $reset"
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:AndnoVember:test/15.4/home:AndnoVember:test.repo"

		echo -e "$yellow Repository Name : android-tools from home:GNorth project $reset"
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:GNorth/15.4/home:GNorth.repo"

		echo -e "$yellow Repository Name : https://build.opensuse.org/project/show/home:Herbster0815  $reset"

		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:Herbster0815/openSUSE_Leap_15.4/home:Herbster0815.repo"

		echo "sudo zypper refresh"
		echo "sudo zypper install android-tools"

		echo -e "$yellow Repository Name : android-tools from home:ahjolinna project $reset"

		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:ahjolinna/15.4/home:ahjolinna.repo"

		echo -e "$yellow Repository Name : android-tools from home:mrbadguy project $reset"
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:mrbadguy/openSUSE_Leap_15.4/home:mrbadguy.repo"



	elif [ "$leap155" == "15.5" ];then
		echo -e "$green =============== openSUSE Leap 15.5 =============== $reset \n"
		
		echo -e "$yellow Repository Name : android-tools from home:AndnoVember:test project $reset"
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:AndnoVember:test/15.5/home:AndnoVember:test.repo"
		


		echo -e "$yellow Repository Name : android-tools from home:Herbster0815 project $reset"
		
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:Herbster0815/openSUSE_Leap_15.5/home:Herbster0815.repo"


	fi
}

android_tools_app(){

	echo "$yellow android-tools $reset"
	echo "$yellow Android platform tools $reset"
	echo -e "\n $green INFO : Android SDK Platform-Tools is a component for the Android SDK. It includes tools that interface with the Android platform.\n $reset"
	echo "=============== Leap 15.3 ================="

	echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:cabelo:innovators/15.3/home:cabelo:innovators.repo"
	echo "$yellow or $reset"
	echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:embar-:Lietukas/openSUSE_Leap_15.3/home:embar-:Lietukas.repo"
	echo "sudo zypper refresh"
	echo "sudo zypper install android-tools"


}


vlc_repo(){


	if [ "$leap153" == "15.3" ];then
		echo "=============== Leap 15.3 ================="

		echo "sudo zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.3:Update/standard/openSUSE:Leap:15.3:Update.repo"
	elif [ "$leap154" == "15.4" ];then
		echo "=============== Leap 15.3 ================="
		echo "zypper addrepo https://download.opensuse.org/repositories/home:worldcitizen:GoldenCheetah/15.4/home:worldcitizen:GoldenCheetah.repo"
		echo "zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.4:Update/standard/openSUSE:Leap:15.4:Update.repo"
	elif [ "$leap152" == "15.2" ];then
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.2:Update/standard/openSUSE:Leap:15.2:Update.repo"
	elif [ "$Tumbleweed" == "Tumbleweed" ] || [ "$tumbleweed" == "tumbleweed" ];then
		echo "=============== Tumbleweed ================="
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:StefanBruens:branches:multimedia:libs/openSUSE_Tumbleweed/home:StefanBruens:branches:multimedia:libs.repo"
	fi
}


vlc_app(){

	if [ "$leap153" == "15.3" ];then
		echo "=============== Leap 15.3 ================="

		echo "sudo zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.3:Update/standard/openSUSE:Leap:15.3:Update.repo"
		echo "sudo zypper refresh"
		echo "sudo zypper install vlc"
	elif [ "$leap154" == "15.4" ];then
		echo "=============== Leap 15.4 ================="
		echo "zypper addrepo https://download.opensuse.org/repositories/home:worldcitizen:GoldenCheetah/15.4/home:worldcitizen:GoldenCheetah.repo"
		echo "zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.4:Update/standard/openSUSE:Leap:15.4:Update.repo"
		echo "sudo zypper refresh"
		echo "sudo zypper install vlc"
	elif [ "$leap152" == "15.2" ];then
		echo "=============== Leap 15.2 ================="
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.2:Update/standard/openSUSE:Leap:15.2:Update.repo"
		echo "sudo zypper refresh"
		echo "sudo zypper install vlc"

	elif [ "$Tumbleweed" == "Tumbleweed" ] || [ "$umbleweed" == "tumbleweed" ];then
		echo "=============== Tumbleweed ================="
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:StefanBruens:branches:multimedia:libs/openSUSE_Tumbleweed/home:StefanBruens:branches:multimedia:libs.repo"
		echo "sudo zypper refresh"
		echo "sudo zypper install vlc"
	fi



}

vscode_repo(){

	echo "sudo zypper addrepo https://packages.microsoft.com/yumrepos/vscode vscode"

}



vscode_app(){

	echo "sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc"
	echo "sudo zypper addrepo https://packages.microsoft.com/yumrepos/vscode vscode"
	echo "sudo zypper refresh"
	echo "sudo zypper install code"
}



mediacodec_repo(){

	if [ "$leap153" == "15.3" ];then
		echo "=============== Leap 15.3 ================="

		echo "sudo zypper addrepo https://ftp.gwdg.de/pub/linux/misc/packman/suse/openSUSE_Leap_15.3/"
	elif [ "$leap154" == "15.4" ];then
		echo "=============== Leap 15.4 ================="
		echo "zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.4:Update/standard/openSUSE:Leap:15.4:Update.repo"
	elif [ "$leap152" == "15.2" ];then
		echo "=============== Leap 15.2 ================="
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.2:Update/standard/openSUSE:Leap:15.2:Update.repo"

	elif [ "$Tumbleweed" == "Tumbleweed" ] || [ "$umbleweed" == "tumbleweed" ];then
		echo "=============== Tumbleweed ================="
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:StefanBruens:branches:multimedia:libs/openSUSE_Tumbleweed/home:StefanBruens:branches:multimedia:libs.repo"
	fi





}


mediacodec_app(){

	if [ "$leap153" == "15.3" ];then
		echo "=============== Leap 15.3 ================="

		echo "sudo zypper addrepo https://ftp.gwdg.de/pub/linux/misc/packman/suse/openSUSE_Leap_15.3/"
		echo "sudo zypper refresh"
		echo "sudo zypper install vlc"
	elif [ "$leap154" == "15.4" ];then
		echo "=============== Leap 15.4 ================="
		echo "sudo zypper addrepo https://ftp.gwdg.de/pub/linux/misc/packman/suse/openSUSE_Leap_15.4/" 
		echo "zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.4:Update/standard/openSUSE:Leap:15.4:Update.repo"
		echo "sudo zypper refresh"
		echo "sudo zypper install vlc"
	elif [ "$leap152" == "15.2" ];then
		echo "=============== Leap 15.2 ================="
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/openSUSE:Leap:15.2:Update/standard/openSUSE:Leap:15.2:Update.repo"
		echo "sudo zypper refresh"
		echo "sudo zypper install vlc"

	elif [ "$Tumbleweed" == "Tumbleweed" ] || [ "$umbleweed" == "tumbleweed" ];then
		echo "=============== Tumbleweed ================="
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:StefanBruens:branches:multimedia:libs/openSUSE_Tumbleweed/home:StefanBruens:branches:multimedia:libs.repo"
		echo "sudo zypper refresh"
		echo "sudo zypper install vlc"
	fi






}



# MariaDB

mariadb_repo(){

	echo "=============== openSUSE 15 ==============="
	echo "https://yum.mariadb.org/RPM-GPG-KEY-MariaDB"
	echo "https://yum.mariadb.org/10.5/opensuse/15/x86_64"

}



mariadb_app(){

	echo "sudo rpm --import https://yum.mariadb.org/RPM-GPG-KEY-MariaDB"
	echo "sudo zypper --gpg-auto-import-keys refresh"
	echo "sudo zypper addrepo --gpgcheck --refresh https://yum.mariadb.org/10.5/opensuse/15/x86_64 mariadb"
  	echo "sudo zypper install MariaDB-server MariaDB-client"
	echo "sudo zypper install galera MariaDB-shared MariaDB-backup MariaDB-common"


}






# postgreSQL

postgre_repo(){

	echo "$red Attention : PostgreSQL 10 is available to install on openSUSE from default repositories $reset"

	echo "$yellow postgresql from home:EDV_Lotse:postgresql10 project  $reset"

	echo "=============== openSUSE Leap 15.2  ==============="
	echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:EDV_Lotse:postgresql10/openSUSE_Leap_15.2_images/home:EDV_Lotse:postgresql10.repo"

	echo "=============== openSUSE 15.4 ==============="
	echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:EDV_Lotse:postgresql10/15.4/home:EDV_Lotse:postgresql10.repo"
	echo "=============== openSUSE 15.3 ==============="
	echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:EDV_Lotse:postgresql10/15.3/home:EDV_Lotse:postgresql10.repo"
	echo "=============== openSUSE Leap 15.1 ==============="
	echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:EDV_Lotse:postgresql10/openSUSE_Leap_15.1_images/home:EDV_Lotse:postgresql10.repo"


}

postgre_app(){

	echo "=============== postgreSQL 10 ==============="
	echo "sudo zypper install postgresql10-server  postgresql10"

	echo "$yellow PostgreSQL comes in the official repositories of the distribution and its installation is quite simple. However, it is convenient to add your repository to always get the latest versions available. $reset"

	echo "=============== openSUSE Leap 15.2  ==============="
	echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:EDV_Lotse:postgresql10/openSUSE_Leap_15.2_images/home:EDV_Lotse:postgresql10.repo"
	echo "sudo zypper refresh"
	echo "sudo zypper install postgresql"

	echo "=============== openSUSE 15.4 ==============="
	echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:EDV_Lotse:postgresql10/15.4/home:EDV_Lotse:postgresql10.repo"

	echo "sudo zypper refresh"
	echo "sudo zypper install postgresql"
	echo "=============== openSUSE 15.3 ==============="
	echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:EDV_Lotse:postgresql10/15.3/home:EDV_Lotse:postgresql10.repo"

	echo "sudo zypper refresh"
	echo "sudo zypper install postgresql"
	echo "=============== openSUSE Leap 15.1 ==============="
	echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:EDV_Lotse:postgresql10/openSUSE_Leap_15.1_images/home:EDV_Lotse:postgresql10.repo"
	echo "sudo zypper refresh"
	echo "sudo zypper install postgresql"


}




# clean unneeded

remove_unneeded(){

	# This Function clean out all unneeded autoinstalled dependencies
	echo "$red Start clean out all unneeded autoinstalled dependencies $reset"
	zypper packages --unneeded | awk -F'|' 'NR==0 || NR==1 || NR==2 || NR==3 || NR==4 {next} {print $3}' > list
	while read p; do sudo zypper -n rm -y "$p"; done < list
	rm -rf list

	echo "all unneeded autoinstalled dependencies cleaned $green [ OK ] $reset"



}




info(){



	echo "A simple and straightforward package manager for OpenSUSE that can make everyday tasks easier for developers and system administrators."
	echo " - Supported Distrubutions : Leap and Tumbleweed"
	echo " - update and Upgrade and dist upgrade Like ubuntu and Fedora"
	echo " - Remove Unneed packages"
	echo " - show Package Providers"
	echo " - List Installed Apps"
	echo " - show repositories"
	echo " - show Installation Manual"
	echo " - Support for software that is not supported by the main package manager"
	echo ""
	echo "========================================================================="
	echo " There is no claim that this package manager is better or more optimal than the others."
	echo " The goal is to improve platforms or make things easier."
	echo " I wrote this package manager for my daily tasks I am in this philosophy that "
	echo "I try to write everything I need myself and I wanted to make it available to others."
	echo "Use and support and accompany us to make the conditions better for ourselves."
	echo "=========================================================================="
	echo ""
	echo "> Developer : Koosha Yeganeh"
	echo "> GitHub : https://github.com/KooshaYeganeh"
	echo "> DockerHub : https://hub.docker.com/u/kooshakooshadv"
	echo "> GitBooks : kooshayeganeh.gitbook.io"
	echo "> and Some More :)"

}


support_systems(){

	echo "=============== Tumbleweed ==============="
	echo "For Developers, openSUSE Contributors, Gamers and Linux/FOSS Enthusiasts"
	echo "Rolling release with the latest packages provided by the openSUSE Project."
	
	echo "=============== Leap ==============="
	echo "For Sysadmins, Enterprise Developers, and ‘Regular’ Desktop Users"
	echo "Regular release with the benefits of both enterprise-grade engineering and community-developed innovation."


}


list_repo(){

	repos=`ls /etc/zypp/repos.d`
	for repo in $repos;do
		echo " > $repo"
		echo "------------------------------------"
	done

	total=`ls /etc/zypp/repos.d | wc -l`
	echo "Total Number of Repositories : $total"



}

man(){

	echo "suse Package Manager"
	echo "suse <command> "
	echo "--whereis : Each software shows in which repository it is located or which repositories provide this software. "
	echo "> example : suse --whereis vlc"
	echo "************************************************"
	echo "--howinstall : It shows the installation steps. It shows which steps you should go through to install the relevant software on your system."
	echo "> example : suse --howinstall vlc"
	echo "************************************************"
	echo "--info : show information"
	echo"> example : suse --info"
	echo "************************************************"
	echo "man : suse man ; show manuals"
	echo "************************************************"
	echo "--install : use this command to install a software"
	echo "> exapmle : suse install vscode"
	echo "************************************************"
	echo "--remove : use this command to remove a software"
	echo "> example: suse --remove"
	echo "************************************************"
	echo "--list-app : List Installed apps "
	echo "example : suse --list-app"
	echo "************************************************"
	echo "--search-app : Serach in installed Apps"
	echo "> example : suse --search-app xfce"
	echo "************************************************"
	echo "--clean-unneed : clean out all unneeded autoinstalled dependencies "
       	echo "> exmple : suse --clean-unneed"
	echo "************************************************"
	echo "--suport-sytems : Which distributions does this package manager support"
       	echo "> example : suse --support-systems"
	echo "************************************************"
	echo "--list-repo : list of repositories in system" 
	echo "> example : suse --list-repo"
	echo "************************************************"
	echo "--update : update Packages "
	echo "> example : suse --update"
	echo "************************************************"
	echo "--upgrade : upgrade packages "
       	echo "> example : suse --upgrade"
	echo "************************************************"
	echo "--dist-upgrade : Distribution Upgrade "
	echo "> example : suse --dist-upgrade"

}




list_install(){

	echo "installed apps"
	rpm -qa


}


update (){



	sudo zypper refresh

}


upgrade (){


	sudo zypper update
}




gcc(){

	sudo zypper -n install gcc

	if [ -f "/usr/bin/gcc" ];then
		echo "gcc installed [ OK ]"
	else
		echo "Error on gcc Installation"
	fi
}

git(){

	sudo zypper -n install git
	if [ -f "/usr/bin/git" ];then
		echo "git installed [ OK ]"
	else
		echo "Error on git Installation"
	fi
}

zsh(){
	sudo zypper -n install zsh

	if [ -f "/usr/bin/zsh" ];then
		echo "zsh installed [ OK ]"
	else
		echo "Error on zsh Installation"
	fi
}



# Basic Tools

basic_tools(){

	sudo zypper -n installl git
	sudo zypper -n install wget
	sudo zypper -n install curl
	sudo zypper -n net-tools-deprecated

	
	if [ -f "/usr/bin/git" ] && [ -f "/usr/bin/wget" ] && [ -f "/usr/bin/curl" ];then
		echo "basic Tools installed [ OK ]"
	else
		echo "Error on Basic tools Installation"
	fi

}


ohmyzsh(){
	
	
	sudo zypper -n install zsh
	sh -c "$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"

	if [ -f "~/.zshrc" ];then
		echo "oh-my-zsh installed [ OK ]"
	else
		echo "Error on Ohmyzsh Installation"
	fi
	echo "exec zsh" >> ~/.bashrc


}


lshardware(){
	
	sudo zypper -n install lshw
	if [ -f "/usr/sbin/lshw" ];then
		echo "lshw installed [ OK ]"
	else
		echo "Error on lshw Installation"
	fi

}


openconnect(){

	sudo zypper -n install openconnect

	if [ -f "/usr/sbin/openconnect" ];then
		echo "openconnect installed [ OK ]"
	else
		echo "Error on openconnect Installation"
	fi
}




openvpn(){

	sudo zypper -n install openvpn

	if [ -f "/usr/sbin/openvpn" ];then
		echo "openvpn installed [ OK ]"
	else
		echo "Error on openvpn Installation"
	fi
}




# Editos

vscode(){


	sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
	sudo zypper addrepo https://packages.microsoft.com/yumrepos/vscode vscode
	sudo zypper refresh
	sudo zypper -n install code

	if [ -f "/usr/bin/code" ];then
		echo "VScode installed [ OK ]"
	else
		echo "Error on VScode Installation"
	fi
}



# vim

vim(){


	sudo zypper -n install vim

	if [ -f "/usr/bin/git" ];then
		git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
	else
		sudo zypper install git
		git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
	fi
	
	if [ -f "/usr/bin/vim" ];then
		echo "Vim installed [ OK ]"
	else
		echo "Error on Vim Installation"
	fi



}



# Database




mariadb(){

	sudo rpm --import https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
	sudo zypper --gpg-auto-import-keys refresh
	if [ -f "/etc/zypp/repos.d/mariadb.repo" ];then
		sudo rm /etc/zypp/repos.d/mariadb.repo
		sudo zypper addrepo --gpgcheck --refresh https://yum.mariadb.org/10.5/opensuse/15/x86_64 mariadb
		sudo zypper install MariaDB-server MariaDB-client
		sudo zypper install galera MariaDB-shared MariaDB-backup MariaDB-common


	else
	
		sudo rm /etc/zypp/repos.d/mariadb.repo
		sudo zypper addrepo --gpgcheck --refresh https://yum.mariadb.org/10.5/opensuse/15/x86_64 mariadb
		sudo zypper install MariaDB-server MariaDB-client
		sudo zypper install galera MariaDB-shared MariaDB-backup MariaDB-common
	fi
	


	if [ -f "/usr/bin/mariadb" ];then
		echo "mariaDB installed [ OK ]"
	else
		echo "Error on mariaDB Installation"
	fi
}



postgre(){

	echo "Start Install PostgreSQL10"
	sudo zypper install postgresql10-server  postgresql10
	echo "PostgreSQL Installed [ OK ]"

	if [ -f "/usr/bin/psql" ];then
		echo "postgreSQL installed [ OK ]"
	else
		echo "Error on postgreSQL Installation"
	fi
}



sqlite(){


	sudo zypper -n install sqlite3


	if [ -f "/usr/bin/sqlite3" ];then
		echo "sqlite3 installed [ OK ]"
	else
		echo "Error on sqlite3 Installation"
	fi
}


influx(){


	sudo zypper -n install influxdb


	if [ -f "/usr/bin/influxdb" ];then
		echo "Vim installed [ OK ]"
	else
		echo "Error on Vim Installation"
	fi

}


mongodb(){

	sudo zypper -n install mongodb


	if [ -f "/usr/bin/mongodb" ];then
		echo "mongodb installed [ OK ]"
	else
		echo "Error on mongodb Installation"
	fi


}



#web server

nginx(){


	sudo zypper -n install nginx

	if [ -f "/usr/sbin/nginx" ] && [ -f "/etc/nginx" ];then
		echo "nginx installed [ OK ]"
	else
		echo "Error on Vim Installation"
	fi



}




apache(){

	sudo zypper -n install apache2

	if [ -f "/etc/sysconfig/apache2" ] || [ -f "/etc/apache2/" ];then
		echo "Apache installed [ OK ]"
	else
		echo "Error on Apache Installation"
	fi

}




# Network Tools


nmap(){


	sudo zypper -n install nmap

	if [ -f "/usr/bin/nmap" ];then
		echo "nmap installed [ OK ]"
	else
		echo "Error on nmap Installation"
	fi


}



tcpdump(){


	sudo zypper -n install tcpdump

	if [ -f "/usr/bin/tcpdump" ];then
		echo "tcpdump installed [ OK ]"
	else
		echo "Error on tcpdump Installation"
	fi


}


wireshark(){


	sudo zypper -n install wireshark

	if [ -f "/usr/sbin/wireshrk" ];then
		echo "wireshark installed [ OK ]"
	else
		echo "Error on wireshark Installation"
	fi


}


iptraf(){


	sudo zypper -n install iptraf-ng

	if [ -f "/usr/bin/iptraf-ng" ];then
		echo "iptraf-ng installed [ OK ]"
	else
		echo "Error on iptraf-ng Installation"
	fi


}



# Network_Tools_All

network_tools(){


	sudo zypper -n install nmap
	sudo zypper -n install tcpdump
	sudo zypper -n install wireshark
	sudo zypper -n install iptraf-ng

	if [ -f "/usr/bin/iptraf-ng" ] && [ -f "/usr/sbin/wireshark" ] && \
	       	[ -f "/usr/bin/nmap" ] && [ -f "/usr/bin/tcpdump" ];then
		echo "Network Tools installed [ OK ]"
	else
		echo "Error on Network_Tools Installation"
	fi
}



docker(){


	sudo zypper -n install docker


	if [ -f "/usr/bin/docker" ];then
		echo "docker installed [ OK ]"
	else
		echo "Error on docker Installation"
	fi



}




adb(){




	if [ "$Tumbleweed" == "Tumbleweed" ] || [ "$tumbleweed" == "tumbleweed" ];then

		sudo zypper addrepo https://download.opensuse.org/repositories/home:GNorth/openSUSE_Tumbleweed/home:GNorth.repo
		sudo zypper refresh
		sudo zypper -n install android-tools
		if [ -f "/usr/bin/adb" ];then
			echo "Android Tools Installed [ OK ]"
		else
			echo "Error on Adnroid Tools installaion [ ERROR ]"
		fi
		

	elif [ "$leap152" == "15.2" ];then
		sudo zypper addrepo https://download.opensuse.org/repositories/home:AndnoVember:test/openSUSE_Leap_15.2/home:AndnoVember:test.repo

		sudo zypper refresh
		sudo zypper -n install android-tools
		if [ -f "/usr/bin/adb" ];then
			echo "Android Tools Installed [ OK ]"
		else
			echo "Error on Adnroid Tools installaion [ ERROR ]"
		fi
	elif [ "$leap154" == "15.4" ];then
		sudo zypper addrepo https://download.opensuse.org/repositories/home:AndnoVember:test/15.4/home:AndnoVember:test.repo
		sudo zypper refresh
		sudo zypper -n install android-tools

		if [ -f "/usr/bin/adb" ];then
			echo "Android Tools Installed [ OK ]"
		else
			echo "Error on Adnroid Tools installaion [ ERROR ]"
		fi
	elif [ "$leap153" == "15.3" ];then
		sudo zypper addrepo https://download.opensuse.org/repositories/home:cabelo:innovators/15.3/home:cabelo:innovators.repo"
		sudo zypper addrepo https://download.opensuse.org/repositories/home:embar-:Lietukas/openSUSE_Leap_15.3/home:embar-:Lietukas.repo"
		sudo zypper refresh"
		sudo zypper -n install android-tools"
		if [ -f "/usr/bin/adb" ];then
			echo "Android Tools Installed [ OK ]"
		else
			echo "Error on Adnroid Tools installaion [ ERROR ]"
		fi
	fi
}



clamav_repo(){
	if [ "$leap153" == "15.3" ];then
		echo "$yellow Repository Name: clamav from home:ecsos project $reset"
		echo "=============== Leap 15.3 ================="
		echo "zypper addrepo https://download.opensuse.org/repositories/home:ecsos/15.3/home:ecsos.repo"
	elif [ "$leap154" == "15.4" ];then
		echo "=============== Leap 15.4 ================="
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:ecsos/15.4/home:ecsos.repo"
	elif [ "$leap155" == "15.5" ];then
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:ecsos/15.5/home:ecsos.repo"
	elif [ "$Tumbleweed" == "Tumbleweed" ] || [ "$tumbleweed" == "tumbleweed" ];then
		echo "=============== Tumbleweed ================="
		echo "sudo zypper addrepo https://download.opensuse.org/repositories/home:ecsos/15.5/home:ecsos.repo"
	fi
}



clamav(){

	sudo zypper -n install clamav
	if [ -f "/usr/bin/clamscan" ];then
		echo "clamAV installed [ OK ]"
	else
		echo "Error on clamAV installation"
	fi
}


maldet(){

	if [ -f "/usr/bin/wget" ];then
		cd /tmp
		wget http://www.rfxn.com/downloads/maldetect-current.tar.gz
		tar xfz maldetect-current.tar.gz
		cd maldetect-1.6.4
		./install.sh
		cd
		if [ -f "/usr/local/sbin/maldet" ];then
			echo "Malware Detect Installed [ OK ]"
		else
			echo "Error on Malware Detect installation"
		fi
	else
		sudo zypper -n install wget
		cd /tmp
		wget http://www.rfxn.com/downloads/maldetect-current.tar.gz
		tar xfz maldetect-current.tar.gz
		cd maldetect-1.6.4
		./install.sh
		cd
		if [ -f "/usr/local/sbin/maldet" ];then
			echo "Malware Detect Installed [ OK ]"
		else
			echo "Error on Malware Detect installation"
		fi
	fi
}


rkhunter(){

	sudo zypper -n install rkhunter

	if [ -f "/usr/bin/rkhunter" ];then
		echo "rkhunter Installed [ OK ]"
	else
		echo "Error on rkhunter installation"
	fi

}


lynis(){
	sudo zypper -n install lynis

	if [ -f "/usr/bin/lynis" ];then
		echo "lynis Installed [ OK ]"
	else
		echo "Error on lynis installation"
	fi
}


antivirus(){


	clamav
	maldet
	rkhunter
	lynis
}





fail2ban(){


	sudo zypper -n install fail2ban

	if [ -f "/etc/fail2ban" ];then
		echo "fail2ban Installed [ OK ]"
	else
		echo "Error on fail2ban installation"
	fi
}


tcpwrapper(){

	sudo zypper -n install tcpd

	if [ -f "/usr/sbin/tcpd" ];then
		echo "tcpwrapper Installed [ OK ]"
	else
		echo "Error on tcpwrapper installation"
	fi


}

firewalld(){


	sudo zypper -n install firewalld

	if [ -f "/usr/sbin/firewalld" ];then
		echo "firewalld Installed [ OK ]"
	else
		echo "Error on firewalld installation"
	fi


}



network_security(){

	firewalld
	tcpwrapper
	fail2ban



}


# WAF : Web Application Firewall

apache_waf(){


	sudo zypper -n install modsecurity
}


nginx_waf(){


	sudo zypper -n install nginx-module-modsecurity


}


openssh(){


	sudo zypper -n install openssh-server

	if [ "/etc/sshd/sshd.config" ];then
		echo "openssh Installed [ OK ]"
	else
		echo "Error on openssh installation"
	fi
}


sshfs(){


	sudo zypper -n install sshfs

	if [ "/usr/bin/sshfs" ];then
		echo "sshfs Installed [ OK ]"
	else
		echo "Error on sshfs installation"
	fi

}



usbguard(){
	sudo zypper -n install usbguard

	if [ "/etc/usbguard" ];then
		echo "usbguard Installed [ OK ]"
	else
		echo "Error on usbguard installation"
	fi

}

jpg(){

	sudo zypper -n install jpegotim

	if [ -f "/usr/bin/jpegoptim" ];then
		echo "jpegoptim Installed [ OK ]"
	else
		echo "Error on jpegoptim installation"
	fi

}

png(){

	sudo zypper -n install optipng


	if [ -f "/usr/bin/optipng" ];then
		echo "optipng Installed [ OK ]"
	else
		echo "Error on optipng installation"
	fi

}


exif(){

	sudo zypper install exiftool

	if [ -f "/usr/bin/exiftool" ];then
		echo "exiftool installed [ OK ]"
	else
		echo "Error on exiftool installation"
	fi

}

image_optimizer(){


	jpg
	png
	exif

}



telegram(){

	cd /home/$USER/Downloads
	wget https://updates.tdesktop.com/tlinux/tsetup.4.6.2.tar.xz

	tar xf tsetup.4.6.2.tar.xz
	cd Telegram
	cd /usr/bin
	sudo ln -s /home/$USER/Downloads/Telegram/Telagram Telegram
	sudo ln -s /home/$USER/Downloads/Telegram/Updater Telegram_Updater
	cd /home/$USER/Downloads/Telegram
	./Telegram&
}


ansible(){

	sudo zypper -n install ansible

	if [ "/usr/bin/ansible" ];then
		echo "Ansible Installed [ OK ]"
	else
		echo "Error on Ansible installation"
	fi



}






# Develper

develope(){

	version_check=`python3 --version | grep -o "3.6*"`
	if [ "$version_check" == "3.6" ];then
		sudo zypper install -n python39
		sudo pip3.9 install virtualenv
		if [ -f "/usr/bin/code" ];then
			code --install-extension ajanuw.bs5
			code --install-extension cstrap.flask-snippets
			code --install-extension ecmel.vscode-html-css
			code --install-extension WyattFerguson.jinja2-snippet-kit
			code --install-extension donjayamanne.jquerysnippets
			code --install-extension tushortz.python-extended-snippets
			code --install-extension KevinRose.vsc-python-indent
			code --install-extension ms-vscode.cpptools
			code --install-extension rogalmic.bash-debug
		else
			vscode

			code --install-extension ajanuw.bs5
			code --install-extension cstrap.flask-snippets
			code --install-extension ecmel.vscode-html-css
			code --install-extension WyattFerguson.jinja2-snippet-kit
			code --install-extension donjayamanne.jquerysnippets
			code --install-extension tushortz.python-extended-snippets
			code --install-extension KevinRose.vsc-python-indent
			code --install-extension ms-vscode.cpptools
			code --install-extension rogalmic.bash-debug
		fi
	else
		if [ -f "/usr/bin/code" ];then
			code --install-extension ajanuw.bs5
			code --install-extension cstrap.flask-snippets
			code --install-extension ecmel.vscode-html-css
			code --install-extension WyattFerguson.jinja2-snippet-kit
			code --install-extension donjayamanne.jquerysnippets
			code --install-extension tushortz.python-extended-snippets
			code --install-extension KevinRose.vsc-python-indent
			code --install-extension ms-vscode.cpptools
			code --install-extension rogalmic.bash-debug
		else
			vscode

			code --install-extension ajanuw.bs5
			code --install-extension cstrap.flask-snippets
			code --install-extension ecmel.vscode-html-css
			code --install-extension WyattFerguson.jinja2-snippet-kit
			code --install-extension donjayamanne.jquerysnippets
			code --install-extension tushortz.python-extended-snippets
			code --install-extension KevinRose.vsc-python-indent
			code --install-extension ms-vscode.cpptools
			code --install-extension rogalmic.bash-debug
		fi
	fi


}










# Android Tools

if [ "$0" == "./suse" ];then
	if [ "$1" == "--whereis" ];then
		if [ "$2" == "android_tools" ] || [ "$2" == "android tools" ] || \
			[ "$2" == "Android Tools" ] || [ "$2" == "Android_Tools" ];then
			android_tools_repo
		
		elif [ "$2" == "vlc" ] || [ "$2" == "VLC" ];then
			vlc_repo

		elif [ "$2" == "vscode" ] || [ "$2" == "VSCODE" ] || \
			[ "$2" == "code" ] || [ "$2" == "CODE" ] || \
				[ "$2" == "visual_stdio_code" ] || [ "$2" == "visual stdio code" ];then
					vscode_repo
		elif [ "$2" == "codec" ] || [ "$2" == "CODEC" ] || \
			[ "$2" == "multimedia codec" ] || [ "$2" == "multimedia_codec" ] || \
				[ "$2" == "MultiMedia Codec" ] || [ "$2" == "MultiMedia_Codec" ];then
					codec_repo

		elif [ "$2" == "mariadb" ] || [ "$2" == "Mariadb" ] || \
			[ "$2" == "mariaDB" ] || [ "$2" == "MariaDB" ];then
				mariadb_repo

		elif [ "$2" == "postgre" ] || [ "$2" == "Postgre" ] || \
			[ "$2" == "postgresql" ] || [ "$2" == "postgreSQL" ] || \
			[ "$2" == "PostgreSQL" ];then
				postgre_repo
		fi
	elif [ "$1" == "--howinstall" ];then
		if [ "$2" == "android_tools" ] || [ "$2" == "Android_Tools" ];then
			android_tools_app
		elif [ "$2" == "mariadb" ] || [ "$2" == "Mariadb" ] || \
			[ "$2" == "mariaDB" ] || [ "$2" == "MariaDB" ];then
				mariadb_app

		elif [ "$2" == "postgre" ] || [ "$2" == "Postgre" ] || \
			[ "$2" == "postgresql" ] || [ "$2" == "postgreSQL" ] || \
				[ "$2" == "PostgreSQL" ];then
					postgre_app

		elif [ "$2" == "vlc" ] || [ "$2" == "VLC" ];then
			vlc_app
		
		elif [ "$2" == "vscode" ] || [ "$2" == "VSCODE" ] || \
			[ "$2" == "code" ] || [ "$2" == "CODE" ] || \
			[ "$2" == "visual_stdio_code" ] || [ "$2" == "visual stdio code" ];then
				vscode_app
		
		elif [ "$2" == "codec" ] || [ "$2" == "CODEC" ] || \
			[ "$2" == "multimedia_codec" ] || [ "$2" == "MultiMedia_Codec" ];then
					codec_app
		fi
	
	elif [ "$1" == "--clean-unneed" ];then
		clean_unneeded

	elif [ "$1" == "--help" ] || [ "$1" == "--Help" ] || \
		[ "$1" == "--HELP" ] || [ "$1" == "man" ] || \
		[ "$1" == "manual" ];then
			man
	
	elif [ "$1" == "--info" ] || [ "$1" == "--INFO" ] || \
		[ "$1" == "--Info" ];then
			info


	elif [ "$1" == "--search-app" ];then
		rpm -qa | grep $2

	elif [ "$1" == "--list-repo" ];then
		list_repo
		
	elif [ "$1" == "--document" ];then
		if [ "$2" == "apache" ];then
			echo "https://doc.opensuse.org/documentation/leap/reference/html/book-reference/cha-apache2.html"
		elif [ "$2" == "nginx" ];then
			echo "https://www.osradar.com/how-to-install-nginx-on-opensuse-suse-15/"
		elif [ "$2" == "clamav" ];then
			echo "https://en.opensuse.org/ClamAV"
			echo "https://linuxhint.com/install_clamav_ubuntu/"
			echo "https://github.com/KooshaYeganeh/OpenSuse4Developers#clamav"
		fi

	else
		echo "I Can't Understand What You Want."
		echo "You should say whereis or howinstall"
	fi
else
	echo "Do you mean suse?"
	
fi
